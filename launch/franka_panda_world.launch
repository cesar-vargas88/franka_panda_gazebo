<launch>

    <!-- roslaunch arguments -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="recording" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>

    <!-- We resume the logic in empty_world.launch, changing the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">

        <arg name="world_name" value="$(find franka_panda_gazebo)/worlds/franka_panda.world"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="recording" value="$(arg recording)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>

    </include>

    <!-- Load joint details configurations from YAML file to parameter server --> 
    <!--rosparam command="load" file="$(find franka_panda_gazebo)/config/franka_panda_details.yaml"/-->

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find franka_panda_description)/robots/panda_arm_hand.urdf.xacro' load_gazebo:=true"/>
    <!--param name="/arm/root_name" value="panda_link0"/-->

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" 
        pkg="gazebo_ros" 
        type="spawn_model" 
        respawn="false" 
        output="screen"
        args="-urdf -model panda -param robot_description"/>

    <!-- create a tf with base frame as 'base' (to match aml_robot) -->
    <!--node pkg="tf" type="static_transform_publisher" name="base_to_link0" args="0 0 0 0 0 0 1 base panda_link0 100" /-->

    <!-- ros_control franka_panda_control launch file -->
    <include file="$(find franka_panda_control)/launch/franka_panda_control.launch" /> 

    <!-- Launch visualization in rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find franka_panda_description)/config/franka_panda.rviz" required="true" />

</launch>